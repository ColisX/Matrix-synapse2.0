version: '3'

services:
  synapse:
    image: matrixdotorg/synapse:latest
    container_name: synapse
    restart: unless-stopped
    ports:
      - "8008:8008"
      - "8448:8448"
    volumes:
      - ./synapse:/data:rw 
    environment:
      - SYNAPSE_CONFIG_DIR=/data
      - SYNAPSE_CONFIG_PATH=/data/homeserver.yaml
      - SYNAPSE_SERVER_NAME=synapse
      - SYNAPSE_REPORT_STATS=no
      - SYNAPSE_DB_HOST=synapse_db
      - SYNAPSE_DB_USER=synapse_user
      - SYNAPSE_DB_NAME=synapse
      - SYNAPSE_DB_PASSWORD=your_password
    depends_on:
      - synapse_db
      - redis
    networks:
      - matrix_net
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:8008/_matrix/static/ || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
#    command: generate

  synapse_db:
    image: postgres:latest
    container_name: synapse_db
    restart: unless-stopped
    shm_size: "1g"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U synapse_user"]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      - POSTGRES_DB=synapse
      - POSTGRES_USER=synapse_user
      - POSTGRES_PASSWORD=your_password
      - POSTGRES_INITDB_ARGS=--encoding=UTF8 --locale=C
    volumes:
      - ./synapse_db/pgsql_db:/var/lib/postgresql/data:rw 
      - ./synapse_db/postgresql.conf:/etc/postgresql/postgresql.conf
    command: postgres -c 'config_file=/etc/postgresql/postgresql.conf'
    ports:
      - "5412:5432"
    networks:
      - matrix_net

  adminer:
    image: adminer
    container_name: synapse_adminer
    restart: unless-stopped
    ports:
      - "5080:8080"
    networks:
      - matrix_net 



  synapse-generic-worker-1:
    image: matrixdotorg/synapse:latest
    container_name: synapse-generic-worker-1
    restart: unless-stopped
    entrypoint: ["/start.py", "run", "--config-path=/data/homeserver.yaml", "--config-path=/data/workers/synapse-generic-worker-1.yaml"]
    healthcheck:
      test: ["CMD-SHELL", "curl -fSs http://localhost:8081/health || exit 1"]
      start_period: "5s"
      interval: "15s"
      timeout: "5s"
    networks:
      - matrix_net
    volumes:
      - ./synapse:/data:rw 
    environment:
      SYNAPSE_WORKER: synapse.app.generic_worker
    ports:
      - 8081:8081
    depends_on:
      - synapse
      - synapse_db
      - redis

  synapse-generic-worker-2:
    image: matrixdotorg/synapse:latest
    container_name: synapse-generic-worker-2
    restart: unless-stopped
    entrypoint: ["/start.py", "run", "--config-path=/data/homeserver.yaml", "--config-path=/data/workers/synapse-generic-worker-2.yaml"]
    healthcheck:
      test: ["CMD-SHELL", "curl -fSs http://localhost:8082/health || exit 1"]
      start_period: "5s"
      interval: "15s"
      timeout: "5s"
    networks:
      - matrix_net
    volumes:
      - ./synapse:/data:rw 
    environment:
      SYNAPSE_WORKER: synapse.app.generic_worker
    ports:
      - 8082:8082
    depends_on:
      - synapse
      - redis

  media_repo:
    image: matrixdotorg/synapse:latest
    container_name: media_repo
    restart: unless-stopped
    entrypoint: ["/start.py", "run", "--config-path=/data/homeserver.yaml", "--config-path=/data/workers/media_repo.yaml"]
    healthcheck:
      test: ["CMD-SHELL", "curl -fSs http://localhost:8083/health || exit 1"]
      start_period: "5s"
      interval: "15s"
      timeout: "5s"
    networks:
      - matrix_net
    volumes:
      - ./synapse:/data:rw
    environment:
      - SYNAPSE_WORKER=synapse.app.media_repository
    ports:
      - 8083:8083
    depends_on:
      - synapse
      - redis

  synapse-federation-reader-1:
    image: matrixdotorg/synapse:latest
    container_name: synapse-federation-reader-1
    restart: unless-stopped
    entrypoint: ["/start.py", "run", "--config-path=/data/homeserver.yaml", "--config-path=/data/workers/synapse-federation-reader-1.yaml"]
    healthcheck:
      disable: true
    networks:
      - matrix_net
    volumes:
      - ./synapse:/data:rw # Replace with the path to your Synapse volume if different
    environment:
      SYNAPSE_WORKER: synapse.app.federation_reader
    ports:
      - 8085:8085
    depends_on:
      - synapse_db
      - synapse
      - redis


  synapse-federation-sender-1:
    image: matrixdotorg/synapse:latest
    container_name: synapse-federation-sender-1
    restart: unless-stopped
    entrypoint: ["/start.py", "run", "--config-path=/data/homeserver.yaml", "--config-path=/data/workers/synapse-federation-sender-1.yaml"]
    healthcheck:
      disable: true
    networks:
      - matrix_net
    volumes:
      - ./synapse:/data:rw 
    ports:
      - 8086:8086
    environment:
      SYNAPSE_WORKER: synapse.app.federation_sender
    depends_on:
      - synapse
      - synapse_db
      - redis


  push_worker:
    image: matrixdotorg/synapse:latest
    container_name: push_worker
    restart: unless-stopped
    entrypoint: ["/start.py", "run", "--config-path=/data/homeserver.yaml", "--config-path=/data/workers/push_worker.yaml"]
    volumes:
      - ./synapse:/data:rw
    environment:
      - SYNAPSE_WORKER=synapse.app.pusher
    depends_on:
      - synapse
      - synapse_db
      - redis
    networks:
      - matrix_net


  redis:
    image: redis:6-alpine
    restart: unless-stopped
    networks:
      - matrix_net
    command: redis-server --appendonly yes --databases 16  # 这会启用持久化和设置16个数据库
    volumes:
      - ./redis_data:/data

networks:
  matrix_net:
    external: true

